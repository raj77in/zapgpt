# Pre-commit hooks configuration for ZapGPT
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # Built-in hooks for basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        description: Trim trailing whitespace
      - id: end-of-file-fixer
        description: Ensure files end with a newline
      - id: check-yaml
        description: Check YAML files for syntax errors
      - id: check-toml
        description: Check TOML files for syntax errors
      - id: check-json
        description: Check JSON files for syntax errors
      - id: check-merge-conflict
        description: Check for merge conflict markers
      - id: check-added-large-files
        description: Prevent large files from being committed
        args: ['--maxkb=1000']
      - id: mixed-line-ending
        description: Ensure consistent line endings
        args: ['--fix=lf']

  # Python-specific hooks
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        description: Format Python code with Black
        language_version: python3
        args: ['--line-length=88']

  # Ruff for linting and formatting (faster alternative to flake8 + isort)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.4.4
    hooks:
      - id: ruff
        description: Run Ruff linter
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        description: Run Ruff formatter

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    hooks:
      - id: mypy
        description: Run mypy type checker
        additional_dependencies: [types-requests, types-tabulate]
        args: [--ignore-missing-imports, --no-strict-optional, --disable-error-code=no-any-return, --disable-error-code=var-annotated, --disable-error-code=attr-defined, --disable-error-code=return, --disable-error-code=arg-type, --disable-error-code=assignment, --disable-error-code=override, --disable-error-code=index]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        description: Run Bandit security linter
        args: ['--skip', 'B101,B404,B603,B601']
        exclude: ^tests/

  # Documentation checks (relaxed for development)
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        description: Check docstring style
        args: [--convention=google, --add-ignore=D100,D101,D102,D103,D104,D105,D107,D200,D205,D212,D400,D401,D411,D415]
        exclude: ^(tests/|docs/|setup.py|verify_install.py|installation_check.py)

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      # Run tests before commit
      - id: pytest
        name: Run pytest
        entry: ./scripts/run-tests.sh
        language: system
        pass_filenames: false
        description: Run all tests

      # Verify installation
      - id: verify-install
        name: Verify installation
        entry: ./scripts/run-verify.sh
        language: system
        pass_filenames: false
        description: Verify ZapGPT installation

      # Check for Python version compatibility
      - id: python-version-check
        name: Check Python version compatibility
        entry: python
        language: system
        args: [-c, "import sys; assert sys.version_info >= (3, 9), f'Python 3.9+ required, got {sys.version_info}'"]
        pass_filenames: false
        description: Ensure Python 3.9+ compatibility

      # Check for common anti-patterns
      - id: check-debug-statements
        name: Check for debug statements
        entry: python
        language: system
        args: [-c, "import sys, re; [sys.exit(1) for f in sys.argv[1:] if re.search(r'\\b(pdb\\.set_trace|breakpoint|print\\(.*debug|console\\.log)\\(', open(f).read())]"]
        types: [python]
        description: Check for debug statements

# Configuration for specific hooks
default_language_version:
  python: python3

# Global settings
fail_fast: false  # Continue running hooks even if one fails
minimum_pre_commit_version: "3.0.0"
